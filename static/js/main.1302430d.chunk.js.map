{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","addDebit","id","uuid","date","Date","toISOString","description","amount","debits","map","debit","style","padding","val","Credits","addCredit","credits","credit","App","calculateBalance","total","Math","round","Number","EPSILON","logInInfo","newUser","currentUser","push","a","fetch","debits_response","json","credits_response","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1302430d.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n        <div>\n          Balance: {this.props.accountBalance}\n        </div>\n    );\n  }\n}\n\nexport default AccountBalance;","// src/components/Home.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n      \n    return (\n        <div>\n          <img src=\"https://picsum.photos/201\" alt=\"bank\"/>\n          <h1>Bank of React</h1>\n\n          <Link to=\"/userProfile\">User Profile</Link>\n          <div>\n          <p><Link to=\"/debits\">Debits</Link></p>\n          <p><Link to=\"/credits\">Credits</Link></p>\n          </div>\n          \n          <AccountBalance accountBalance={this.props.accountBalance}/>\n        </div>\n    );\n  }\n}\n\nexport default Home;","// src/components/UserProfile.js\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <Link to=\"/\">Return to Home</Link>\n          <h1>User Profile</h1>\n\n          <div>Username: {this.props.userName}</div>\n          <div>Member Since: {this.props.memberSince}</div>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","// Login.js\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n\n  render () {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","import React, { Component } from 'react'\nimport { uuid } from 'uuidv4'\nimport { Link } from 'react-router-dom'\nimport AccountBalance from './AccountBalance'\n\nclass Debits extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: '',\n      id: '',\n      description: '',\n      amount: '',\n    };\n  }\n\n  addDebit = (e) => {\n    e.preventDefault()\n\n    // Create debit object and call addDebit from app.js\n    this.props.addDebit({\n      id: uuid(),\n      date: new Date().toISOString(),\n      description: this.state.description,\n      amount: +this.state.amount\n    });\n  }\n\n  render() {\n    const { debits } = this.props;\n\n    const drawTable = () =>\n      debits.map((debit) => {\n        return (\n          <tr key={debit.id}>\n            <td>{debit.date}</td>\n            <td style={{ padding: '0 3rem' }}>{debit.description}</td>\n            <td>{debit.amount}</td>\n          </tr>\n        );\n      });\n\n    return (\n      <section>\n        <Link to='/'>Back to Home</Link>\n        <AccountBalance accountBalance={this.props.accountBalance} />\n\n        <h1>Debits</h1>\n\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Description</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>{drawTable()}</tbody>\n        </table>\n\n        <hr />\n        <h3>Add Debit</h3>\n        <form onSubmit={this.addDebit}>\n          <label>Description:</label>\n          <input\n            type='text'\n            value={this.state.description}\n            onChange={(val) => this.setState({ description: val.target.value })}\n          />\n          <label>Amount:</label>\n          <input\n            type='number'\n            value={this.state.amount}\n            onChange={(val) => {\n              this.setState({ amount: val.target.value });\n            }}\n          />\n          <button>Add Debit</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Debits","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// Module used to generate unique id\nimport { uuid } from 'uuidv4'\nimport AccountBalance from './AccountBalance'\n\nclass Credits extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: '',\n      id: '',\n      description: '',\n      amount: '',\n    };\n  }\n\n  addCredit = (e) => {\n    e.preventDefault()\n\n    // Create credit object and call addCredit from app.js\n    this.props.addCredit({\n      id: uuid(),\n      date: new Date().toISOString(),\n      description: this.state.description,\n      amount: +this.state.amount\n    });\n  }\n\n  render() {\n    const { credits } = this.props;\n\n    const drawTable = () =>\n      credits.map((credit) => {\n        return (\n          <tr key={credit.id}>\n            <td>{credit.date}</td>\n            <td style={{ padding: '0 3rem' }}>{credit.description}</td>\n            <td>{credit.amount}</td>\n          </tr>\n        );\n      });\n\n    return (\n      <section>\n        <Link to=\"/\" >Back to Home</Link>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n\n        <h1>Credits</h1>\n\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Description</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>{drawTable()}</tbody>\n        </table>\n\n        <hr />\n        <h3>Add Credit</h3>\n        <form onSubmit={this.addCredit}>\n          <label>Description:</label>\n          <input \n            type='text' \n            value={this.state.description} \n            onChange={(val) => this.setState({description: val.target.value})} />\n          <label>Amount:</label>\n          <input\n            type='number'\n            value={this.state.amount}\n            onChange={(val) => {this.setState({ amount: val.target.value })}}\n          />\n          <button>Add Credit</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Credits","// React Modules\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Switch, Route} from 'react-router-dom';\n// Components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile'\nimport LogIn from './components/Login';\nimport Debits from './components/Debits'\nimport Credits from './components/Credits'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'joe_shmo',\n        memberSince: '07/23/96',\n      },\n      debits: [],\n      credits: [],\n\n    };\n  }\n\n  async componentDidMount() {\n    // Fetching debits from datapoint\n    const debits_response = await fetch('https://moj-api.herokuapp.com/debits')\n    const debits = await debits_response.json()\n\n    // Fetching credits from datapoint\n    const credits_response = await fetch('https://moj-api.herokuapp.com/credits')\n    const credits = await credits_response.json()\n\n    // Calculating the account balance substrating debits from credits\n    const accountBalance = this.calculateBalance(debits, credits)\n    \n    // Updating state with new data\n    this.setState({\n      debits, \n      credits, \n      accountBalance\n    })\n  }\n\n  // Calculating total sbustrating debits from credits\n  calculateBalance = (debits = this.state.debits, credits = this.state.credits) => {\n    // Accumulator\n    let total = 0\n    \n    // Adding credits to accumulator\n    credits.map(credit => total += +credit.amount)\n\n    // Substracting debits from accumulator\n    debits.map(debit => total -= +debit.amount)\n\n    // Rounding number to two decimal points\n    total = Math.round((total + Number.EPSILON) * 100) / 100\n\n    return total\n  }\n\n  \n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser };\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser });\n  };\n\n  // Add debit to debits array and calculate new Account Balance\n  addDebit = (debit) => {\n    // Copying debits array\n    const debits = [...this.state.debits]\n    \n    // Adding new debit to local copy of debits array\n    debits.push(debit)\n\n    // Updating debits state\n    this.setState({debits: debits}, () => {\n      // calculating new account balance\n      const accountBalance = this.calculateBalance()\n      // updating accountBalance state\n      this.setState({accountBalance})\n    })\n  }\n  //Add credits to credits array and calculate new Account Balance (same as above)\n  addCredit = (credit) => {\n    const credits = [...this.state.credits]\n    credits.push(credit)\n\n    this.setState({credits: credits}, () => {\n      const accountBalance = this.calculateBalance()\n      this.setState({accountBalance})\n    })\n  }\n\n  render() {\n\n    return (\n      <Router basename=\"/assignment4/\">\n        <Switch>\n          <Route exact path='/' render={() => <Home accountBalance={this.state.accountBalance} />} />\n          <Route \n          exact \n          path='/login' render={() => <LogIn \n            user={this.state.currentUser} \n            mockLogIn={this.mockLogIn} />} \n          />\n          <Route\n            exact\n            path='/userProfile'\n            render={() => <UserProfile \n                userName={this.state.currentUser.userName} \n                memberSince={this.state.currentUser.memberSince}  />}\n          />\n          <Route\n            exact\n            path='/accountbalance'\n            render={() => <h1> Account Balance Route </h1>}\n          />\n          <Route\n            exact\n            path='/debits'\n            render={() => <Debits \n                            debits={this.state.debits} \n                            addDebit={this.addDebit} \n                            accountBalance={this.state.accountBalance} />\n            }\n          />\n          <Route\n            exact\n            path='/credits'\n            render={() => <Credits \n                            credits={this.state.credits} \n                            addCredit={this.addCredit} \n                            accountBalance={this.state.accountBalance} />\n            }\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}